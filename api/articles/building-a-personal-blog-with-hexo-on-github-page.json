{"title":"使用 Hexo 及 GitHub Page 建立個人部落格","slug":"building-a-personal-blog-with-hexo-on-github-page","date":"2019-02-11T18:43:55.000Z","updated":"2021-09-05T09:20:08.030Z","comments":true,"path":"api/articles/building-a-personal-blog-with-hexo-on-github-page.json","excerpt":" [Figure] 事實上有段時間也嘗試用 Meduim 寫部落格。不過自己還是比較習慣直接用 Markdown 語法寫部落格。另外還有一點就是 Medium 上的文章曝光度比較高，一些寫於工作上的隨筆記錄不是那麼適合大眾化，加上 Hexo 的自訂性與自由度都更高一點，比較符合我的使用需求。","covers":["/2019/02/12/building-a-personal-blog-with-hexo-on-github-page/cover.png"],"content":"<p><img src=\"/2019/02/12/building-a-personal-blog-with-hexo-on-github-page/cover.png\"></p>\n<blockquote>\n<p>事實上有段時間也嘗試用 <a href=\"https://medium.com/\">Meduim</a> 寫部落格。不過自己還是比較習慣直接用 <a href=\"https://markdown.tw/\">Markdown</a> 語法寫部落格。另外還有一點就是 Medium 上的文章曝光度比較高，一些寫於工作上的隨筆記錄不是那麼適合大眾化，加上 Hexo 的自訂性與自由度都更高一點，比較符合我的使用需求。</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<p>因為之前申請網域即將到期了，新的網域就是現在網址列所看到的，更短、更好記、也更個人化。隨著網域更新，順手也將本站升級了版本，趁著記憶猶新，寫篇文章記錄一下過程。</p>\n<h2 id=\"安裝-Hexo\"><a href=\"#安裝-Hexo\" class=\"headerlink\" title=\"安裝 Hexo\"></a>安裝 Hexo</h2><p>確認電腦環境已經安裝 <a href=\"http://nodejs.org/\">Node.js</a> 與 <a href=\"http://git-scm.com/\">Git</a>，然後透過 NPM 安裝 Hexo 命令列程式：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ npm install -g hexo-cli<br></code></pre></td></tr></table></figure>\n\n<p>安裝需求可以參考 <a href=\"https://hexo.io/zh-tw/docs/index.html\">官方文件</a> 的說明。</p>\n<h2 id=\"建立-Hexo-專案\"><a href=\"#建立-Hexo-專案\" class=\"headerlink\" title=\"建立 Hexo 專案\"></a>建立 Hexo 專案</h2><p>安裝 Hexo 完成後，執行以下指令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo init &lt;folder&gt;<br>$ <span class=\"hljs-built_in\">cd</span> &lt;folder&gt;<br>$ npm install<br></code></pre></td></tr></table></figure>\n\n<p>其中 <code>&lt;folder&gt;</code> 就是指定安裝專案的資料夾，完成後會有以下檔案：</p>\n<figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sqf\">.<br>├── <span class=\"hljs-variable\">_config</span>.yml<br>├── package.json<br>├── scaffolds<br>├── source<br>|   ├── <span class=\"hljs-variable\">_drafts</span><br>|   └── <span class=\"hljs-variable\">_posts</span><br>└── themes<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>_config.yml：網站配置檔案，在此配置大部分的設定。</li>\n<li>package.json：Node.js 應用程式的描述文件。</li>\n<li>scaffolds：<a href=\"https://hexo.io/zh-tw/docs/writing.html#%E9%B7%B9%E6%9E%B6%EF%BC%88Scaffold%EF%BC%89\">鷹架</a> 資料夾。建立新文章時，Hexo 會根據 scaffold 來建立檔案。</li>\n<li>source：原始檔案資料夾。<code>_drafts</code> 目錄下存放草稿文章；<code>_posts</code> 目錄下存放發佈文章。</li>\n<li>themes：<a href=\"https://hexo.io/zh-tw/docs/themes\">主題</a> 資料夾。Hexo 會根據主題來產生靜態檔案。</li>\n</ul>\n<p>詳細的配置說明請參考 Hexo <a href=\"https://hexo.io/zh-tw/docs/configuration\">官方文件</a> 。</p>\n<h2 id=\"套用佈景主題\"><a href=\"#套用佈景主題\" class=\"headerlink\" title=\"套用佈景主題\"></a>套用佈景主題</h2><p>Hexo 預設使用 <a href=\"https://github.com/hexojs/hexo-theme-landscape\">landscape</a> 主題。可以換成 <a href=\"https://hexo.io/themes/\">其他</a> 喜歡的主題，或者自己打造一個。</p>\n<p><a href=\"https://github.com/theme-next/hexo-theme-next\">NexT</a> 這套主題應該是目前最多人使用的。以 NexT 主題為例，最簡單的安裝方法是 clone 該 repo 至 <code>themes</code> 目錄下： </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">cd</span> &lt;folder&gt;<br>$ git <span class=\"hljs-built_in\">clone</span> https://github.com/theme-next/hexo-theme-next themes/next<br></code></pre></td></tr></table></figure>\n\n<p>然後可以啟用 NexT 佈景主題：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">theme:</span> <span class=\"hljs-string\">next</span><br></code></pre></td></tr></table></figure>\n\n<p>NexT 預設提供 4 個樣式可選：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-comment\"># Schemes</span><br><span class=\"hljs-comment\">#scheme: Muse</span><br><span class=\"hljs-comment\">#scheme: Mist</span><br><span class=\"hljs-comment\">#scheme: Pisces</span><br><span class=\"hljs-attr\">scheme:</span> <span class=\"hljs-string\">Gemini</span><br></code></pre></td></tr></table></figure>\n\n<p>NexT 佈景主題配置在 <code>&lt;folder&gt;/themes/next/config.yml</code> 檔案。其他詳細設定請參考 NexT <a href=\"https://theme-next.org/\">文件</a> 說明。</p>\n<h2 id=\"文章的撰寫與發佈\"><a href=\"#文章的撰寫與發佈\" class=\"headerlink\" title=\"文章的撰寫與發佈\"></a>文章的撰寫與發佈</h2><p>撰寫草稿：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new draft &lt;title&gt;<br></code></pre></td></tr></table></figure>\n\n<p>建立一個草稿會在 <code>&lt;folder&gt;/source/_drafts</code> 目錄下根據給定的 <code>&lt;title&gt;</code> 建立檔案。</p>\n<p>發佈文章：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo publish &lt;title&gt;<br></code></pre></td></tr></table></figure>\n\n<p>發佈文章則會將 <code>_drafts</code> 目錄下的 <code>&lt;title&gt;</code> 檔案移動到 <code>_posts</code> 資料夾。</p>\n<p>預覽結果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs basg\">$ hexo serve --draft<br></code></pre></td></tr></table></figure>\n\n<p>打開瀏覽器進入 <code>http//:localhost:4000</code> 可看預覽結果。</p>\n<p>每篇文章的 Markdown 檔案需要定義 <a href=\"https://hexo.io/zh-tw/docs/front-matter\">Front-matter</a> ，用來指定文章標題、標籤、類別等。如果需要建立<strong>標籤</strong>及<strong>分類</strong>頁，分別建立以下檔案：</p>\n<p>標籤頁：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\">---<br>type: categories<br>comments: false<br>---<br></code></pre></td></tr></table></figure>\n\n<p>分類頁：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\">---<br>type: categories<br>comments: false<br>---<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"部署至-GitHub-Pages\"><a href=\"#部署至-GitHub-Pages\" class=\"headerlink\" title=\"部署至 GitHub Pages\"></a>部署至 GitHub Pages</h2><p>部署的方法很多種，因人而異。個人習慣是在 GitHub 上建立 <code>blog</code> repo 放置 Hexo 部落格專案；另外再建立 <code>&lt;username&gt;.github.io</code> repo 用於部署網站。以 Git 部署為例，安裝 <a href=\"https://github.com/hexojs/hexo-deployer-git\">hexo-deployer-git</a>：</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ada\">$ npm install hexo-deployer-git <span class=\"hljs-comment\">--save</span><br></code></pre></td></tr></table></figure>\n\n<p>修改部署設定：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">deploy:</span><br>  <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">git</span><br>  <span class=\"hljs-attr\">repo:</span> <span class=\"hljs-string\">&lt;repository</span> <span class=\"hljs-string\">url&gt;</span><br>  <span class=\"hljs-attr\">branch:</span> [<span class=\"hljs-string\">branch</span>]<br>  <span class=\"hljs-attr\">message:</span> [<span class=\"hljs-string\">message</span>]<br></code></pre></td></tr></table></figure>\n\n<p>部署之前建議先刪除已產生的檔案和快取：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo clean<br></code></pre></td></tr></table></figure>\n\n<p>然後生成的靜態檔案：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\n\n<p>部署網站：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\n\n<p>在 Local 端就可完成部署。當然如果想要「搞剛」一點，透過 <a href=\"http://travis-ci.org/\">Travis CI</a> 或 <a href=\"https://circleci.com/\">CircleCI</a> 之類的 CI/CD 工具做自動化部署也是可以的。</p>\n<h2 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h2><ul>\n<li><a href=\"https://hexo.io/zh-tw/\">Hexo</a></li>\n<li><a href=\"https://help.github.com/categories/github-pages-basics/\">GitHub Pages Basics</a></li>\n</ul>\n","more":"<p>因為之前申請網域即將到期了，新的網域就是現在網址列所看到的，更短、更好記、也更個人化。隨著網域更新，順手也將本站升級了版本，趁著記憶猶新，寫篇文章記錄一下過程。</p>\n<h2 id=\"安裝-Hexo\"><a href=\"#安裝-Hexo\" class=\"headerlink\" title=\"安裝 Hexo\"></a>安裝 Hexo</h2><p>確認電腦環境已經安裝 <a href=\"http://nodejs.org/\">Node.js</a> 與 <a href=\"http://git-scm.com/\">Git</a>，然後透過 NPM 安裝 Hexo 命令列程式：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ npm install -g hexo-cli<br></code></pre></td></tr></table></figure>\n\n<p>安裝需求可以參考 <a href=\"https://hexo.io/zh-tw/docs/index.html\">官方文件</a> 的說明。</p>\n<h2 id=\"建立-Hexo-專案\"><a href=\"#建立-Hexo-專案\" class=\"headerlink\" title=\"建立 Hexo 專案\"></a>建立 Hexo 專案</h2><p>安裝 Hexo 完成後，執行以下指令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo init &lt;folder&gt;<br>$ <span class=\"hljs-built_in\">cd</span> &lt;folder&gt;<br>$ npm install<br></code></pre></td></tr></table></figure>\n\n<p>其中 <code>&lt;folder&gt;</code> 就是指定安裝專案的資料夾，完成後會有以下檔案：</p>\n<figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sqf\">.<br>├── <span class=\"hljs-variable\">_config</span>.yml<br>├── package.json<br>├── scaffolds<br>├── source<br>|   ├── <span class=\"hljs-variable\">_drafts</span><br>|   └── <span class=\"hljs-variable\">_posts</span><br>└── themes<br></code></pre></td></tr></table></figure>\n\n<ul>\n<li>_config.yml：網站配置檔案，在此配置大部分的設定。</li>\n<li>package.json：Node.js 應用程式的描述文件。</li>\n<li>scaffolds：<a href=\"https://hexo.io/zh-tw/docs/writing.html#%E9%B7%B9%E6%9E%B6%EF%BC%88Scaffold%EF%BC%89\">鷹架</a> 資料夾。建立新文章時，Hexo 會根據 scaffold 來建立檔案。</li>\n<li>source：原始檔案資料夾。<code>_drafts</code> 目錄下存放草稿文章；<code>_posts</code> 目錄下存放發佈文章。</li>\n<li>themes：<a href=\"https://hexo.io/zh-tw/docs/themes\">主題</a> 資料夾。Hexo 會根據主題來產生靜態檔案。</li>\n</ul>\n<p>詳細的配置說明請參考 Hexo <a href=\"https://hexo.io/zh-tw/docs/configuration\">官方文件</a> 。</p>\n<h2 id=\"套用佈景主題\"><a href=\"#套用佈景主題\" class=\"headerlink\" title=\"套用佈景主題\"></a>套用佈景主題</h2><p>Hexo 預設使用 <a href=\"https://github.com/hexojs/hexo-theme-landscape\">landscape</a> 主題。可以換成 <a href=\"https://hexo.io/themes/\">其他</a> 喜歡的主題，或者自己打造一個。</p>\n<p><a href=\"https://github.com/theme-next/hexo-theme-next\">NexT</a> 這套主題應該是目前最多人使用的。以 NexT 主題為例，最簡單的安裝方法是 clone 該 repo 至 <code>themes</code> 目錄下： </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">cd</span> &lt;folder&gt;<br>$ git <span class=\"hljs-built_in\">clone</span> https://github.com/theme-next/hexo-theme-next themes/next<br></code></pre></td></tr></table></figure>\n\n<p>然後可以啟用 NexT 佈景主題：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">theme:</span> <span class=\"hljs-string\">next</span><br></code></pre></td></tr></table></figure>\n\n<p>NexT 預設提供 4 個樣式可選：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-comment\"># Schemes</span><br><span class=\"hljs-comment\">#scheme: Muse</span><br><span class=\"hljs-comment\">#scheme: Mist</span><br><span class=\"hljs-comment\">#scheme: Pisces</span><br><span class=\"hljs-attr\">scheme:</span> <span class=\"hljs-string\">Gemini</span><br></code></pre></td></tr></table></figure>\n\n<p>NexT 佈景主題配置在 <code>&lt;folder&gt;/themes/next/config.yml</code> 檔案。其他詳細設定請參考 NexT <a href=\"https://theme-next.org/\">文件</a> 說明。</p>\n<h2 id=\"文章的撰寫與發佈\"><a href=\"#文章的撰寫與發佈\" class=\"headerlink\" title=\"文章的撰寫與發佈\"></a>文章的撰寫與發佈</h2><p>撰寫草稿：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo new draft &lt;title&gt;<br></code></pre></td></tr></table></figure>\n\n<p>建立一個草稿會在 <code>&lt;folder&gt;/source/_drafts</code> 目錄下根據給定的 <code>&lt;title&gt;</code> 建立檔案。</p>\n<p>發佈文章：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo publish &lt;title&gt;<br></code></pre></td></tr></table></figure>\n\n<p>發佈文章則會將 <code>_drafts</code> 目錄下的 <code>&lt;title&gt;</code> 檔案移動到 <code>_posts</code> 資料夾。</p>\n<p>預覽結果：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs basg\">$ hexo serve --draft<br></code></pre></td></tr></table></figure>\n\n<p>打開瀏覽器進入 <code>http//:localhost:4000</code> 可看預覽結果。</p>\n<p>每篇文章的 Markdown 檔案需要定義 <a href=\"https://hexo.io/zh-tw/docs/front-matter\">Front-matter</a> ，用來指定文章標題、標籤、類別等。如果需要建立<strong>標籤</strong>及<strong>分類</strong>頁，分別建立以下檔案：</p>\n<p>標籤頁：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\">---<br>type: categories<br>comments: false<br>---<br></code></pre></td></tr></table></figure>\n\n<p>分類頁：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs markdown\">---<br>type: categories<br>comments: false<br>---<br></code></pre></td></tr></table></figure>\n\n<h2 id=\"部署至-GitHub-Pages\"><a href=\"#部署至-GitHub-Pages\" class=\"headerlink\" title=\"部署至 GitHub Pages\"></a>部署至 GitHub Pages</h2><p>部署的方法很多種，因人而異。個人習慣是在 GitHub 上建立 <code>blog</code> repo 放置 Hexo 部落格專案；另外再建立 <code>&lt;username&gt;.github.io</code> repo 用於部署網站。以 Git 部署為例，安裝 <a href=\"https://github.com/hexojs/hexo-deployer-git\">hexo-deployer-git</a>：</p>\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs ada\">$ npm install hexo-deployer-git <span class=\"hljs-comment\">--save</span><br></code></pre></td></tr></table></figure>\n\n<p>修改部署設定：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">deploy:</span><br>  <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">git</span><br>  <span class=\"hljs-attr\">repo:</span> <span class=\"hljs-string\">&lt;repository</span> <span class=\"hljs-string\">url&gt;</span><br>  <span class=\"hljs-attr\">branch:</span> [<span class=\"hljs-string\">branch</span>]<br>  <span class=\"hljs-attr\">message:</span> [<span class=\"hljs-string\">message</span>]<br></code></pre></td></tr></table></figure>\n\n<p>部署之前建議先刪除已產生的檔案和快取：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo clean<br></code></pre></td></tr></table></figure>\n\n<p>然後生成的靜態檔案：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo generate<br></code></pre></td></tr></table></figure>\n\n<p>部署網站：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs bash\">$ hexo deploy<br></code></pre></td></tr></table></figure>\n\n<p>在 Local 端就可完成部署。當然如果想要「搞剛」一點，透過 <a href=\"http://travis-ci.org/\">Travis CI</a> 或 <a href=\"https://circleci.com/\">CircleCI</a> 之類的 CI/CD 工具做自動化部署也是可以的。</p>\n<h2 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h2><ul>\n<li><a href=\"https://hexo.io/zh-tw/\">Hexo</a></li>\n<li><a href=\"https://help.github.com/categories/github-pages-basics/\">GitHub Pages Basics</a></li>\n</ul>","categories":[{"name":"技術分享","path":"api/categories/技術分享.json"}],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"},{"name":"GitHub Pages","path":"api/tags/GitHub Pages.json"},{"name":"Blog","path":"api/tags/Blog.json"}]}