{"title":"將 Travis CI 和 Codecov 整合至 Node.js 專案","slug":"integrating-travis-ci-and-codecov-into-your-nodejs-projects","date":"2017-01-14T16:00:00.000Z","updated":"2021-09-05T09:19:09.518Z","comments":true,"path":"api/articles/integrating-travis-ci-and-codecov-into-your-nodejs-projects.json","excerpt":" [Figure] 最近試著將自己的在 GitHub 上 open source projects 整合 Travis CI 與 Codecob 服務，在此記錄一下實踐的過程。","covers":["/2017/01/15/integrating-travis-ci-and-codecov-into-your-nodejs-projects/cover.jpg","/2017/01/15/integrating-travis-ci-and-codecov-into-your-nodejs-projects/badges.png"],"content":"<p><img src=\"/2017/01/15/integrating-travis-ci-and-codecov-into-your-nodejs-projects/cover.jpg\"></p>\n<blockquote>\n<p>最近試著將自己的在 GitHub 上 open source projects 整合 Travis CI 與 Codecob 服務，在此記錄一下實踐的過程。</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<h2 id=\"Travis-CI\"><a href=\"#Travis-CI\" class=\"headerlink\" title=\"Travis CI\"></a>Travis CI</h2><p>Travis CI 是許多被託管在 GitHub 上的開源專案使用的持續整合服務。其設定非常簡單，只需要幾個步驟：</p>\n<ul>\n<li>使用 GitHub 帳號登入 <a href=\"https://travis-ci.org/\">Travis CI</a>。</li>\n<li>Travis CI 會同步你在 GitHub 上的 public 專案，請選擇要使用的 Travis CI 的 repository 。</li>\n<li>在選擇的專案根目錄下新增 <code>.travis.yml</code> 檔案，來定義 CI 流程。</li>\n</ul>\n<p>完成以上步驟後，只要有新的 commit 提交到 GitHub 上，就會觸發 Travis CI，以下是一個簡單的例子：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">language:</span> <span class=\"hljs-string\">node_js</span><br><span class=\"hljs-attr\">node_js:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;7&quot;</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;6&quot;</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;5&quot;</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;4&quot;</span><br><span class=\"hljs-attr\">install:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">install</span><br><span class=\"hljs-attr\">script:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">test</span><br><span class=\"hljs-attr\">after_success:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">coverage</span><br></code></pre></td></tr></table></figure>\n\n<p>更多的設定內容可以參考<a href=\"https://docs.travis-ci.com/\">官方文件</a>。</p>\n<p>這份設定檔聲明我們測試的環境為 Node.js，並指定版本 v4 ~ v7 。在執行 build 前，會運行 <code>npm install</code> 來安裝該專案的依賴模組，然後執行 <code>npm test</code> 跑測試腳本。在定義的各版本環境皆需通過測試，否則即 build 失敗。build 完成後，則執行 <code>npm run coverage</code> ，整合測試覆蓋率服務。</p>\n<h2 id=\"Codecov\"><a href=\"#Codecov\" class=\"headerlink\" title=\"Codecov\"></a>Codecov</h2><p>代碼覆蓋率 (code coverage) 是評估程式原始碼被測試的比例和程度的指標。<a href=\"https://coveralls.io/\">Coveralls</a> 是許多 GitHub 上的開源專案使用的測試覆蓋率服務，不過這裡要介紹的是另外一套 <a href=\"https://codecov.io/\">Codecov</a> ，更為簡單易用：</p>\n<ul>\n<li>使用 GitHub 帳號登入 <a href=\"https://codecov.io/\">Codecov</a>。</li>\n<li>Codecov 會同步你在 GitHub 上的 public 專案，請選擇要使用的 Codecov 的 repository 。</li>\n<li>將測試結果上傳至 Codecov 。</li>\n</ul>\n<p>在 Node.js 環境下我們需要安裝該模組至專案：</p>\n<figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs q\">$ npm install codecov --<span class=\"hljs-built_in\">save</span>-<span class=\"hljs-built_in\">dev</span><br></code></pre></td></tr></table></figure>\n\n<p>我們使用 <a href=\"https://github.com/istanbuljs/nyc\">nyc</a> 提供測試報告，這是基於 <a href=\"https://istanbul.js.org/\">istanbul</a> 的代碼覆蓋率工具，支援 <a href=\"https://github.com/tapjs/node-tap\">tap</a> 、 <a href=\"https://github.com/mochajs/mocha\">mocha</a> 、 <a href=\"https://github.com/avajs/ava\">AVA</a> 等常用的 JavaScript 測試框架。 </p>\n<p>在 <code>package.json</code> 中定義：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">&#123;<br>   <span class=\"hljs-attr\">&quot;scripts&quot;</span>: &#123;<br>     <span class=\"hljs-attr\">&quot;test&quot;</span>: <span class=\"hljs-string\">&quot;nyc mocha test/**/*.js&quot;</span>,<br>     <span class=\"hljs-attr\">&quot;coverage&quot;</span>: <span class=\"hljs-string\">&quot;nyc report --reporter=text-lcov &gt; coverage.lcov &amp;&amp; codecov&quot;</span><br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>我們定義了兩個 script ，執行 <code>npm test</code> 使用 mocha 可運行測試並顯示測試報告， <code>npm run coverage</code> 則將測試報告上傳至 Codecov。然後在 <code>.travis.yml</code> 檔案中加入：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">after_success:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">coverage</span><br></code></pre></td></tr></table></figure>\n\n<p>如此，當 Travis CI 完成測試腳本並 build 成功後，就會將代碼覆蓋率報告上傳至 Codecov。</p>\n<h2 id=\"Adding-Badges-to-Your-Project\"><a href=\"#Adding-Badges-to-Your-Project\" class=\"headerlink\" title=\"Adding Badges to Your Project\"></a>Adding Badges to Your Project</h2><p>Travis CI 與 Codecov 都有提供狀態圖示 (badge) ，我們可以在該平台上找到提供的語法加入 <code>README.md</code> 檔案。不過 Codecov 的提供的 badge 顯示為 <code>codecov</code>，想要顯示 <code>coverage</code> 可另使用 <a href=\"http://shields.io/\">Shields.io</a> 提供的服務。</p>\n<p>以下是使用 <a href=\"http://shields.io/\">Shields.io</a> 提供的 Travus CI 與 Codecov 狀態圖示，將 <code>USER</code> 與 <code>REPO</code> 換成您的 GitHub 帳號與 repository 名稱，加入 <code>README.md</code> 檔案中即可：</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs md\">[<span class=\"hljs-string\">![Build Status</span>][<span class=\"hljs-symbol\">travis-image</span>]][<span class=\"hljs-symbol\">travis-url</span>]<br>[<span class=\"hljs-string\">![Coverage Status</span>][<span class=\"hljs-symbol\">codecov-image</span>]][<span class=\"hljs-symbol\">codecov-url</span>]<br><br>[<span class=\"hljs-symbol\">travis-image</span>]: <span class=\"hljs-link\">https://img.shields.io/travis/USER/REPO.svg</span><br>[<span class=\"hljs-symbol\">travis-url</span>]: <span class=\"hljs-link\">https://travis-ci.org/USER/REPO</span><br>[<span class=\"hljs-symbol\">codecov-image</span>]: <span class=\"hljs-link\">https://img.shields.io/codecov/c/github/USER/REPO.svg</span><br>[<span class=\"hljs-symbol\">codecov-url</span>]: <span class=\"hljs-link\">https://codecov.io/gh/USER/REPO</span><br></code></pre></td></tr></table></figure>\n\n<p>然後我們就可以在專案的 GitHub 頁面上看到顯示的 <code>build</code> 與 <code>coverage</code> 狀態：</p>\n<p><img src=\"/2017/01/15/integrating-travis-ci-and-codecov-into-your-nodejs-projects/badges.png\"></p>\n","more":"<h2 id=\"Travis-CI\"><a href=\"#Travis-CI\" class=\"headerlink\" title=\"Travis CI\"></a>Travis CI</h2><p>Travis CI 是許多被託管在 GitHub 上的開源專案使用的持續整合服務。其設定非常簡單，只需要幾個步驟：</p>\n<ul>\n<li>使用 GitHub 帳號登入 <a href=\"https://travis-ci.org/\">Travis CI</a>。</li>\n<li>Travis CI 會同步你在 GitHub 上的 public 專案，請選擇要使用的 Travis CI 的 repository 。</li>\n<li>在選擇的專案根目錄下新增 <code>.travis.yml</code> 檔案，來定義 CI 流程。</li>\n</ul>\n<p>完成以上步驟後，只要有新的 commit 提交到 GitHub 上，就會觸發 Travis CI，以下是一個簡單的例子：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">language:</span> <span class=\"hljs-string\">node_js</span><br><span class=\"hljs-attr\">node_js:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;7&quot;</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;6&quot;</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;5&quot;</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;4&quot;</span><br><span class=\"hljs-attr\">install:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">install</span><br><span class=\"hljs-attr\">script:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">test</span><br><span class=\"hljs-attr\">after_success:</span><br>  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">coverage</span><br></code></pre></td></tr></table></figure>\n\n<p>更多的設定內容可以參考<a href=\"https://docs.travis-ci.com/\">官方文件</a>。</p>\n<p>這份設定檔聲明我們測試的環境為 Node.js，並指定版本 v4 ~ v7 。在執行 build 前，會運行 <code>npm install</code> 來安裝該專案的依賴模組，然後執行 <code>npm test</code> 跑測試腳本。在定義的各版本環境皆需通過測試，否則即 build 失敗。build 完成後，則執行 <code>npm run coverage</code> ，整合測試覆蓋率服務。</p>\n<h2 id=\"Codecov\"><a href=\"#Codecov\" class=\"headerlink\" title=\"Codecov\"></a>Codecov</h2><p>代碼覆蓋率 (code coverage) 是評估程式原始碼被測試的比例和程度的指標。<a href=\"https://coveralls.io/\">Coveralls</a> 是許多 GitHub 上的開源專案使用的測試覆蓋率服務，不過這裡要介紹的是另外一套 <a href=\"https://codecov.io/\">Codecov</a> ，更為簡單易用：</p>\n<ul>\n<li>使用 GitHub 帳號登入 <a href=\"https://codecov.io/\">Codecov</a>。</li>\n<li>Codecov 會同步你在 GitHub 上的 public 專案，請選擇要使用的 Codecov 的 repository 。</li>\n<li>將測試結果上傳至 Codecov 。</li>\n</ul>\n<p>在 Node.js 環境下我們需要安裝該模組至專案：</p>\n<figure class=\"highlight q\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs q\">$ npm install codecov --<span class=\"hljs-built_in\">save</span>-<span class=\"hljs-built_in\">dev</span><br></code></pre></td></tr></table></figure>\n\n<p>我們使用 <a href=\"https://github.com/istanbuljs/nyc\">nyc</a> 提供測試報告，這是基於 <a href=\"https://istanbul.js.org/\">istanbul</a> 的代碼覆蓋率工具，支援 <a href=\"https://github.com/tapjs/node-tap\">tap</a> 、 <a href=\"https://github.com/mochajs/mocha\">mocha</a> 、 <a href=\"https://github.com/avajs/ava\">AVA</a> 等常用的 JavaScript 測試框架。 </p>\n<p>在 <code>package.json</code> 中定義：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">&#123;<br>   <span class=\"hljs-attr\">&quot;scripts&quot;</span>: &#123;<br>     <span class=\"hljs-attr\">&quot;test&quot;</span>: <span class=\"hljs-string\">&quot;nyc mocha test/**/*.js&quot;</span>,<br>     <span class=\"hljs-attr\">&quot;coverage&quot;</span>: <span class=\"hljs-string\">&quot;nyc report --reporter=text-lcov &gt; coverage.lcov &amp;&amp; codecov&quot;</span><br>   &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>我們定義了兩個 script ，執行 <code>npm test</code> 使用 mocha 可運行測試並顯示測試報告， <code>npm run coverage</code> 則將測試報告上傳至 Codecov。然後在 <code>.travis.yml</code> 檔案中加入：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs yml\"><span class=\"hljs-attr\">after_success:</span> <span class=\"hljs-string\">npm</span> <span class=\"hljs-string\">run</span> <span class=\"hljs-string\">coverage</span><br></code></pre></td></tr></table></figure>\n\n<p>如此，當 Travis CI 完成測試腳本並 build 成功後，就會將代碼覆蓋率報告上傳至 Codecov。</p>\n<h2 id=\"Adding-Badges-to-Your-Project\"><a href=\"#Adding-Badges-to-Your-Project\" class=\"headerlink\" title=\"Adding Badges to Your Project\"></a>Adding Badges to Your Project</h2><p>Travis CI 與 Codecov 都有提供狀態圖示 (badge) ，我們可以在該平台上找到提供的語法加入 <code>README.md</code> 檔案。不過 Codecov 的提供的 badge 顯示為 <code>codecov</code>，想要顯示 <code>coverage</code> 可另使用 <a href=\"http://shields.io/\">Shields.io</a> 提供的服務。</p>\n<p>以下是使用 <a href=\"http://shields.io/\">Shields.io</a> 提供的 Travus CI 與 Codecov 狀態圖示，將 <code>USER</code> 與 <code>REPO</code> 換成您的 GitHub 帳號與 repository 名稱，加入 <code>README.md</code> 檔案中即可：</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs md\">[<span class=\"hljs-string\">![Build Status</span>][<span class=\"hljs-symbol\">travis-image</span>]][<span class=\"hljs-symbol\">travis-url</span>]<br>[<span class=\"hljs-string\">![Coverage Status</span>][<span class=\"hljs-symbol\">codecov-image</span>]][<span class=\"hljs-symbol\">codecov-url</span>]<br><br>[<span class=\"hljs-symbol\">travis-image</span>]: <span class=\"hljs-link\">https://img.shields.io/travis/USER/REPO.svg</span><br>[<span class=\"hljs-symbol\">travis-url</span>]: <span class=\"hljs-link\">https://travis-ci.org/USER/REPO</span><br>[<span class=\"hljs-symbol\">codecov-image</span>]: <span class=\"hljs-link\">https://img.shields.io/codecov/c/github/USER/REPO.svg</span><br>[<span class=\"hljs-symbol\">codecov-url</span>]: <span class=\"hljs-link\">https://codecov.io/gh/USER/REPO</span><br></code></pre></td></tr></table></figure>\n\n<p>然後我們就可以在專案的 GitHub 頁面上看到顯示的 <code>build</code> 與 <code>coverage</code> 狀態：</p>\n<p><img src=\"/2017/01/15/integrating-travis-ci-and-codecov-into-your-nodejs-projects/badges.png\"></p>","categories":[{"name":"技術分享","path":"api/categories/技術分享.json"}],"tags":[{"name":"NodeJS","path":"api/tags/NodeJS.json"},{"name":"CI","path":"api/tags/CI.json"},{"name":"Travis CI","path":"api/tags/Travis CI.json"},{"name":"Codecov","path":"api/tags/Codecov.json"},{"name":"GitHub","path":"api/tags/GitHub.json"},{"name":"Code Coverage","path":"api/tags/Code Coverage.json"}]}