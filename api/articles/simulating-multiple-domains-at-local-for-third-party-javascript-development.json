{"title":"在本地端模擬多個網域名稱以用於第三方 JavaScript 開發","slug":"simulating-multiple-domains-at-local-for-third-party-javascript-development","date":"2017-04-03T12:00:00.000Z","updated":"2021-09-05T09:19:15.369Z","comments":true,"path":"api/articles/simulating-multiple-domains-at-local-for-third-party-javascript-development.json","excerpt":" [Figure] 由於 Same Origin Policy 的安全性考量，在瀏覽器上運行的客戶端 JavaScript 通常會存在跨網域存取資料的限制。當我們在開發第三方 JavaScript (Third-party JavaScript) 應用時，最好能在本地開發環境模擬跨網域 (cross-domain)，避免將來在正式環境上發生無法預期的錯誤。","covers":["/2017/04/03/simulating-multiple-domains-at-local-for-third-party-javascript-development/cover.jpg","/2017/04/03/simulating-multiple-domains-at-local-for-third-party-javascript-development/publisher_test_page.png"],"content":"<p><img src=\"/2017/04/03/simulating-multiple-domains-at-local-for-third-party-javascript-development/cover.jpg\"></p>\n<blockquote>\n<p>由於 <a href=\"https://en.wikipedia.org/wiki/Same-origin_policy\">Same Origin Policy</a> 的安全性考量，在瀏覽器上運行的客戶端 JavaScript 通常會存在跨網域存取資料的限制。當我們在開發第三方 JavaScript (Third-party JavaScript) 應用時，最好能在本地開發環境模擬跨網域 (cross-domain)，避免將來在正式環境上發生無法預期的錯誤。</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<h2 id=\"What-is-Third-Party-JavaScript\"><a href=\"#What-is-Third-Party-JavaScript\" class=\"headerlink\" title=\"What is Third-Party JavaScript?\"></a>What is Third-Party JavaScript?</h2><p>按 <em>Third-Party JavaScript</em> 一書的定義，第三方 JavaScript 應有以下特徵：</p>\n<ol>\n<li>並非由網站內容提供者所編寫</li>\n<li>由不受網站內容提供者控制的外部伺服器提供</li>\n<li>程式的目的是作為內容提供者網站的一部分被執行</li>\n</ol>\n<p>一言以蔽之，第三方 JavaScript 是從遠端 web server 取得服務，並在網頁發布者 (publisher) 頁面上獨立運行的客戶端程式。以下是第三方 JavaScript 應用的實際例子：</p>\n<ol>\n<li>Embedded widgets - 嵌入在發布者網頁中的小型交互式應用 (Disqus, Google Maps, Facebook Widget)</li>\n<li>Analytics and metrics - 收集訪客在發布者網站上的交互數據 (Google Analytics, Flurry, Mixpanel)</li>\n<li>Web service API wrappers - 用於與外部 Web 服務通信的客戶端應用程式 (Facebook Graph API)</li>\n</ol>\n<h2 id=\"Configuring-Environment-for-Third-Party-JavaScript-Development\"><a href=\"#Configuring-Environment-for-Third-Party-JavaScript-Development\" class=\"headerlink\" title=\"Configuring Environment for Third-Party JavaScript Development\"></a>Configuring Environment for Third-Party JavaScript Development</h2><p>我們的目標是在伺服器上提供 script files ，並將其加載到發布者 (publisher) 的網站上。為了建立這個環境，我們需要有一個測試頁面來模擬發布者的網站和一個 web server 放置 script files ，然後將測試頁面和 script files 放置在不同的網域名稱下。</p>\n<h3 id=\"Publisher-Test-Page\"><a href=\"#Publisher-Test-Page\" class=\"headerlink\" title=\"Publisher Test Page\"></a>Publisher Test Page</h3><p>一個發布者的測試頁面會載入並執行第三方 script ，以下是一個簡單的範例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Publisher Test Page<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>Publisher Test Page<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!-- script include snippet here --&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p><code>&lt;script&gt;</code> 放置的位置會影響網頁載入的速度。一般而言，我們會將第三方 script 放置在 <code>&lt;/body&gt;</code> 結束標籤之前。</p>\n<h3 id=\"The-Web-Server\"><a href=\"#The-Web-Server\" class=\"headerlink\" title=\"The Web Server\"></a>The Web Server</h3><p>為了讓測試頁面和第三方 script files 能夠被瀏覽器存取，因此我們需要在本地端運行 web server。可作為網頁伺服器的選擇相當多，您可使用 <a href=\"https://httpd.apache.org/\">Apache</a>、<a href=\"https://www.nginx.com/\">Nginx</a> 這類專門的 web server，或是其他程式語言內置的 web server 作為本地開發環境。</p>\n<p>稍後我們會以 <strong>Node.js</strong> 作為 web server 實現一個範例。</p>\n<h3 id=\"Simulating-Multiple-Domains\"><a href=\"#Simulating-Multiple-Domains\" class=\"headerlink\" title=\"Simulating Multiple Domains\"></a>Simulating Multiple Domains</h3><p>有了網站發布者的測試頁面與網頁伺服器，我們還需要多個不同的網域來提供測試頁面及第三方 script files 的存取。為了模擬多個網域名稱，我們需要修改作業系統的 <code>hosts</code> 檔案並建立兩個別名指向本地主機。</p>\n<p>在 OS X 與 Unix-based 作業系統上，可以在 <code>/etc/hosts</code> 文件找到本機 host 配置；在 Windows 作業系統，嘗試打開 <code>C:/windows/system32/drivers/etc/hosts</code> 文件，然後加入以下兩行：</p>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs accesslog\"><span class=\"hljs-number\">127.0.0.1</span>       publisher.dev<br><span class=\"hljs-number\">127.0.0.1</span>       widget.dev<br></code></pre></td></tr></table></figure>\n\n<p>其中，<code>publisher.dev</code> 是作為模擬網站提供者的頁面的位址，<code>widget.dev</code> 則是放置第三方 script files 的伺服器位址。</p>\n<h2 id=\"Using-Node-js-for-Example\"><a href=\"#Using-Node-js-for-Example\" class=\"headerlink\" title=\"Using Node.js for Example\"></a>Using Node.js for Example</h2><p>對於 JavaScript 開發者來說，Node.js 應是相對熟悉的平台。我們使用 <a href=\"https://expressjs.com/\">express</a> 框架作為 web server ，搭建我們的第三方 JavaScript 開發環境。</p>\n<h3 id=\"Structure-and-Files\"><a href=\"#Structure-and-Files\" class=\"headerlink\" title=\"Structure and Files\"></a>Structure and Files</h3><p>首先，創建一個資料夾 <code>third-party-js-dev</code> 作為專案目錄，並建立以下目錄檔案：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">.<br>├── static<br>│   ├── publisher<br>│   │   └── index.html<br>│   └── widget<br>│       └── widget.js<br>├── test<br>│   └── server<span class=\"hljs-selector-class\">.test</span><span class=\"hljs-selector-class\">.js</span> <br>├── server.js<br>└── package.json<br></code></pre></td></tr></table></figure>\n\n<p><code>third-party-js-dev/package.json</code>:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">&#123;<br>  <span class=\"hljs-attr\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;third-party-js-dev&quot;</span>,<br>  <span class=\"hljs-attr\">&quot;version&quot;</span>: <span class=\"hljs-string\">&quot;1.0.0&quot;</span>,<br>  <span class=\"hljs-attr\">&quot;scripts&quot;</span>: &#123;<br>    <span class=\"hljs-attr\">&quot;start&quot;</span>: <span class=\"hljs-string\">&quot;node server.js&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;test&quot;</span>: <span class=\"hljs-string\">&quot;mocha test&quot;</span><br>  &#125;,<br>  <span class=\"hljs-attr\">&quot;dependencies&quot;</span>: &#123;<br>    <span class=\"hljs-attr\">&quot;express&quot;</span>: <span class=\"hljs-string\">&quot;^4.15.2&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;vhost&quot;</span>: <span class=\"hljs-string\">&quot;^3.0.2&quot;</span><br>  &#125;,<br>  <span class=\"hljs-attr\">&quot;devDependencies&quot;</span>: &#123;<br>    <span class=\"hljs-attr\">&quot;mocha&quot;</span>: <span class=\"hljs-string\">&quot;^3.2.0&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;superagent&quot;</span>: <span class=\"hljs-string\">&quot;^3.5.2&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;supertest&quot;</span>: <span class=\"hljs-string\">&quot;^3.0.0&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>請執行 <code>npm install</code> 安裝依賴套件。</p>\n<p><code>third-party-js-dev/server.js</code>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> path = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;path&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> express = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;express&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> vhost = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;vhost&#x27;</span>)<br><br><span class=\"hljs-keyword\">const</span> app = express()<br><br>app.use(vhost(<span class=\"hljs-string\">&#x27;publisher.dev&#x27;</span>, express.static(path.join(__dirname, <span class=\"hljs-string\">&#x27;static&#x27;</span>, <span class=\"hljs-string\">&#x27;publisher&#x27;</span>))))<br>app.use(vhost(<span class=\"hljs-string\">&#x27;widget.dev&#x27;</span>, express.static(path.join(__dirname, <span class=\"hljs-string\">&#x27;static&#x27;</span>, <span class=\"hljs-string\">&#x27;widget&#x27;</span>))))<br><br>app.listen(<span class=\"hljs-number\">8080</span>, <span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;Server is running&#x27;</span>))<br></code></pre></td></tr></table></figure>\n\n<p>這裡是程式進入點，也設定了 express 的 middlewares ，主要是針對不同的網域名稱指向不同的靜態資源目錄。</p>\n<p><code>third-party-js-dev/static/publisher</code> 目錄下的檔案可以透過 <code>http://publisher.dev:8080</code> 被存取；同時在 <code>third-party-js-dev/static/widget</code> 目錄下的檔案也可以透過 <code>http://widget.dev:8080</code> 被訪問。</p>\n<p><code>third-party-js-dev/static/publisher/index.html</code>:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Publisher Test Page<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>Publisher Test Page<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;http://widget.dev:8080/widget.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>此為用來模擬 publisher 的測試頁面。</p>\n<p><code>third-party-js-dev/static/widget/widget.js</code>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;Hello World!&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<p><code>widget.js</code> 是我們提供的第三方 script file 。 如果在 publisher 的頁面上載入成功，打開瀏覽器 Console 應會顯示 <code>Hello World!</code> 。</p>\n<h3 id=\"Writing-Test\"><a href=\"#Writing-Test\" class=\"headerlink\" title=\"Writing Test\"></a>Writing Test</h3><p>我們可以撰寫簡單的測試來驗證我們的環境是否建立成功。</p>\n<p><code>third-party-js-dev/test/server.test.js</code>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> request = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;supertest&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;../server&#x27;</span>)<br><br>describe(<span class=\"hljs-string\">&#x27;Simulating multiple domains at local&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> &#123;<br>  it(<span class=\"hljs-string\">&#x27;should respond index.html&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">return</span> request(<span class=\"hljs-string\">&#x27;http://publisher.dev:8080&#x27;</span>)<br>      .get(<span class=\"hljs-string\">&#x27;/&#x27;</span>)<br>      .expect(<span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>, <span class=\"hljs-regexp\">/html/</span>)<br>      .expect(<span class=\"hljs-number\">200</span>)<br>  &#125;)<br><br>  it(<span class=\"hljs-string\">&#x27;should respond widget.js&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">return</span> request(<span class=\"hljs-string\">&#x27;http://widget.dev:8080&#x27;</span>)<br>      .get(<span class=\"hljs-string\">&#x27;/widget.js&#x27;</span>)<br>      .expect(<span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>, <span class=\"hljs-regexp\">/javascript/</span>)<br>      .expect(<span class=\"hljs-number\">200</span>)<br>  &#125;)<br>&#125;)<br></code></pre></td></tr></table></figure>\n\n<p>請執行 <code>npm test</code> 跑測試。如果通過測試，表示您的設定沒有問題。</p>\n<h3 id=\"Starting-the-Server-and-Opening-Your-Browser\"><a href=\"#Starting-the-Server-and-Opening-Your-Browser\" class=\"headerlink\" title=\"Starting the Server and Opening Your Browser\"></a>Starting the Server and Opening Your Browser</h3><p>執行 <code>npm start</code> 啟動 web server ，打開瀏覽器並在網址列上輸入 <code>http://publisher.dev:8080</code> 進入測試頁面。</p>\n<p><img src=\"/2017/04/03/simulating-multiple-domains-at-local-for-third-party-javascript-development/publisher_test_page.png\"></p>\n<p>以 Google Chrome 為例，開啟<strong>開發人員工具</strong>，Console 上顯示 <code>Hello World!</code> 則大功告成。</p>\n<p>您可以在這個 <a href=\"https://github.com/chunkai1312/third-party-js-dev\">repo</a> 找到完整的程式範例。</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.manning.com/books/third-party-javascript\">Third-Party JavaScript</a></p>\n","more":"<h2 id=\"What-is-Third-Party-JavaScript\"><a href=\"#What-is-Third-Party-JavaScript\" class=\"headerlink\" title=\"What is Third-Party JavaScript?\"></a>What is Third-Party JavaScript?</h2><p>按 <em>Third-Party JavaScript</em> 一書的定義，第三方 JavaScript 應有以下特徵：</p>\n<ol>\n<li>並非由網站內容提供者所編寫</li>\n<li>由不受網站內容提供者控制的外部伺服器提供</li>\n<li>程式的目的是作為內容提供者網站的一部分被執行</li>\n</ol>\n<p>一言以蔽之，第三方 JavaScript 是從遠端 web server 取得服務，並在網頁發布者 (publisher) 頁面上獨立運行的客戶端程式。以下是第三方 JavaScript 應用的實際例子：</p>\n<ol>\n<li>Embedded widgets - 嵌入在發布者網頁中的小型交互式應用 (Disqus, Google Maps, Facebook Widget)</li>\n<li>Analytics and metrics - 收集訪客在發布者網站上的交互數據 (Google Analytics, Flurry, Mixpanel)</li>\n<li>Web service API wrappers - 用於與外部 Web 服務通信的客戶端應用程式 (Facebook Graph API)</li>\n</ol>\n<h2 id=\"Configuring-Environment-for-Third-Party-JavaScript-Development\"><a href=\"#Configuring-Environment-for-Third-Party-JavaScript-Development\" class=\"headerlink\" title=\"Configuring Environment for Third-Party JavaScript Development\"></a>Configuring Environment for Third-Party JavaScript Development</h2><p>我們的目標是在伺服器上提供 script files ，並將其加載到發布者 (publisher) 的網站上。為了建立這個環境，我們需要有一個測試頁面來模擬發布者的網站和一個 web server 放置 script files ，然後將測試頁面和 script files 放置在不同的網域名稱下。</p>\n<h3 id=\"Publisher-Test-Page\"><a href=\"#Publisher-Test-Page\" class=\"headerlink\" title=\"Publisher Test Page\"></a>Publisher Test Page</h3><p>一個發布者的測試頁面會載入並執行第三方 script ，以下是一個簡單的範例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Publisher Test Page<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>Publisher Test Page<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br>  <span class=\"hljs-comment\">&lt;!-- script include snippet here --&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p><code>&lt;script&gt;</code> 放置的位置會影響網頁載入的速度。一般而言，我們會將第三方 script 放置在 <code>&lt;/body&gt;</code> 結束標籤之前。</p>\n<h3 id=\"The-Web-Server\"><a href=\"#The-Web-Server\" class=\"headerlink\" title=\"The Web Server\"></a>The Web Server</h3><p>為了讓測試頁面和第三方 script files 能夠被瀏覽器存取，因此我們需要在本地端運行 web server。可作為網頁伺服器的選擇相當多，您可使用 <a href=\"https://httpd.apache.org/\">Apache</a>、<a href=\"https://www.nginx.com/\">Nginx</a> 這類專門的 web server，或是其他程式語言內置的 web server 作為本地開發環境。</p>\n<p>稍後我們會以 <strong>Node.js</strong> 作為 web server 實現一個範例。</p>\n<h3 id=\"Simulating-Multiple-Domains\"><a href=\"#Simulating-Multiple-Domains\" class=\"headerlink\" title=\"Simulating Multiple Domains\"></a>Simulating Multiple Domains</h3><p>有了網站發布者的測試頁面與網頁伺服器，我們還需要多個不同的網域來提供測試頁面及第三方 script files 的存取。為了模擬多個網域名稱，我們需要修改作業系統的 <code>hosts</code> 檔案並建立兩個別名指向本地主機。</p>\n<p>在 OS X 與 Unix-based 作業系統上，可以在 <code>/etc/hosts</code> 文件找到本機 host 配置；在 Windows 作業系統，嘗試打開 <code>C:/windows/system32/drivers/etc/hosts</code> 文件，然後加入以下兩行：</p>\n<figure class=\"highlight accesslog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs accesslog\"><span class=\"hljs-number\">127.0.0.1</span>       publisher.dev<br><span class=\"hljs-number\">127.0.0.1</span>       widget.dev<br></code></pre></td></tr></table></figure>\n\n<p>其中，<code>publisher.dev</code> 是作為模擬網站提供者的頁面的位址，<code>widget.dev</code> 則是放置第三方 script files 的伺服器位址。</p>\n<h2 id=\"Using-Node-js-for-Example\"><a href=\"#Using-Node-js-for-Example\" class=\"headerlink\" title=\"Using Node.js for Example\"></a>Using Node.js for Example</h2><p>對於 JavaScript 開發者來說，Node.js 應是相對熟悉的平台。我們使用 <a href=\"https://expressjs.com/\">express</a> 框架作為 web server ，搭建我們的第三方 JavaScript 開發環境。</p>\n<h3 id=\"Structure-and-Files\"><a href=\"#Structure-and-Files\" class=\"headerlink\" title=\"Structure and Files\"></a>Structure and Files</h3><p>首先，創建一個資料夾 <code>third-party-js-dev</code> 作為專案目錄，並建立以下目錄檔案：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs stylus\">.<br>├── static<br>│   ├── publisher<br>│   │   └── index.html<br>│   └── widget<br>│       └── widget.js<br>├── test<br>│   └── server<span class=\"hljs-selector-class\">.test</span><span class=\"hljs-selector-class\">.js</span> <br>├── server.js<br>└── package.json<br></code></pre></td></tr></table></figure>\n\n<p><code>third-party-js-dev/package.json</code>:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs json\">&#123;<br>  <span class=\"hljs-attr\">&quot;name&quot;</span>: <span class=\"hljs-string\">&quot;third-party-js-dev&quot;</span>,<br>  <span class=\"hljs-attr\">&quot;version&quot;</span>: <span class=\"hljs-string\">&quot;1.0.0&quot;</span>,<br>  <span class=\"hljs-attr\">&quot;scripts&quot;</span>: &#123;<br>    <span class=\"hljs-attr\">&quot;start&quot;</span>: <span class=\"hljs-string\">&quot;node server.js&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;test&quot;</span>: <span class=\"hljs-string\">&quot;mocha test&quot;</span><br>  &#125;,<br>  <span class=\"hljs-attr\">&quot;dependencies&quot;</span>: &#123;<br>    <span class=\"hljs-attr\">&quot;express&quot;</span>: <span class=\"hljs-string\">&quot;^4.15.2&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;vhost&quot;</span>: <span class=\"hljs-string\">&quot;^3.0.2&quot;</span><br>  &#125;,<br>  <span class=\"hljs-attr\">&quot;devDependencies&quot;</span>: &#123;<br>    <span class=\"hljs-attr\">&quot;mocha&quot;</span>: <span class=\"hljs-string\">&quot;^3.2.0&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;superagent&quot;</span>: <span class=\"hljs-string\">&quot;^3.5.2&quot;</span>,<br>    <span class=\"hljs-attr\">&quot;supertest&quot;</span>: <span class=\"hljs-string\">&quot;^3.0.0&quot;</span><br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>\n\n<p>請執行 <code>npm install</code> 安裝依賴套件。</p>\n<p><code>third-party-js-dev/server.js</code>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> path = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;path&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> express = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;express&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> vhost = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;vhost&#x27;</span>)<br><br><span class=\"hljs-keyword\">const</span> app = express()<br><br>app.use(vhost(<span class=\"hljs-string\">&#x27;publisher.dev&#x27;</span>, express.static(path.join(__dirname, <span class=\"hljs-string\">&#x27;static&#x27;</span>, <span class=\"hljs-string\">&#x27;publisher&#x27;</span>))))<br>app.use(vhost(<span class=\"hljs-string\">&#x27;widget.dev&#x27;</span>, express.static(path.join(__dirname, <span class=\"hljs-string\">&#x27;static&#x27;</span>, <span class=\"hljs-string\">&#x27;widget&#x27;</span>))))<br><br>app.listen(<span class=\"hljs-number\">8080</span>, <span class=\"hljs-function\">() =&gt;</span> <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;Server is running&#x27;</span>))<br></code></pre></td></tr></table></figure>\n\n<p>這裡是程式進入點，也設定了 express 的 middlewares ，主要是針對不同的網域名稱指向不同的靜態資源目錄。</p>\n<p><code>third-party-js-dev/static/publisher</code> 目錄下的檔案可以透過 <code>http://publisher.dev:8080</code> 被存取；同時在 <code>third-party-js-dev/static/widget</code> 目錄下的檔案也可以透過 <code>http://widget.dev:8080</code> 被訪問。</p>\n<p><code>third-party-js-dev/static/publisher/index.html</code>:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs html\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-meta-keyword\">html</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>Publisher Test Page<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span>&gt;</span>Publisher Test Page<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span><br>  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;http://widget.dev:8080/widget.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span><br></code></pre></td></tr></table></figure>\n\n<p>此為用來模擬 publisher 的測試頁面。</p>\n<p><code>third-party-js-dev/static/widget/widget.js</code>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">&#x27;Hello World!&#x27;</span>)<br></code></pre></td></tr></table></figure>\n\n<p><code>widget.js</code> 是我們提供的第三方 script file 。 如果在 publisher 的頁面上載入成功，打開瀏覽器 Console 應會顯示 <code>Hello World!</code> 。</p>\n<h3 id=\"Writing-Test\"><a href=\"#Writing-Test\" class=\"headerlink\" title=\"Writing Test\"></a>Writing Test</h3><p>我們可以撰寫簡單的測試來驗證我們的環境是否建立成功。</p>\n<p><code>third-party-js-dev/test/server.test.js</code>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> request = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;supertest&#x27;</span>)<br><span class=\"hljs-keyword\">const</span> app = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;../server&#x27;</span>)<br><br>describe(<span class=\"hljs-string\">&#x27;Simulating multiple domains at local&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> &#123;<br>  it(<span class=\"hljs-string\">&#x27;should respond index.html&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">return</span> request(<span class=\"hljs-string\">&#x27;http://publisher.dev:8080&#x27;</span>)<br>      .get(<span class=\"hljs-string\">&#x27;/&#x27;</span>)<br>      .expect(<span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>, <span class=\"hljs-regexp\">/html/</span>)<br>      .expect(<span class=\"hljs-number\">200</span>)<br>  &#125;)<br><br>  it(<span class=\"hljs-string\">&#x27;should respond widget.js&#x27;</span>, <span class=\"hljs-function\">() =&gt;</span> &#123;<br>    <span class=\"hljs-keyword\">return</span> request(<span class=\"hljs-string\">&#x27;http://widget.dev:8080&#x27;</span>)<br>      .get(<span class=\"hljs-string\">&#x27;/widget.js&#x27;</span>)<br>      .expect(<span class=\"hljs-string\">&#x27;Content-Type&#x27;</span>, <span class=\"hljs-regexp\">/javascript/</span>)<br>      .expect(<span class=\"hljs-number\">200</span>)<br>  &#125;)<br>&#125;)<br></code></pre></td></tr></table></figure>\n\n<p>請執行 <code>npm test</code> 跑測試。如果通過測試，表示您的設定沒有問題。</p>\n<h3 id=\"Starting-the-Server-and-Opening-Your-Browser\"><a href=\"#Starting-the-Server-and-Opening-Your-Browser\" class=\"headerlink\" title=\"Starting the Server and Opening Your Browser\"></a>Starting the Server and Opening Your Browser</h3><p>執行 <code>npm start</code> 啟動 web server ，打開瀏覽器並在網址列上輸入 <code>http://publisher.dev:8080</code> 進入測試頁面。</p>\n<p><img src=\"/2017/04/03/simulating-multiple-domains-at-local-for-third-party-javascript-development/publisher_test_page.png\"></p>\n<p>以 Google Chrome 為例，開啟<strong>開發人員工具</strong>，Console 上顯示 <code>Hello World!</code> 則大功告成。</p>\n<p>您可以在這個 <a href=\"https://github.com/chunkai1312/third-party-js-dev\">repo</a> 找到完整的程式範例。</p>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><p><a href=\"https://www.manning.com/books/third-party-javascript\">Third-Party JavaScript</a></p>","categories":[{"name":"技術分享","path":"api/categories/技術分享.json"}],"tags":[{"name":"JavaScript","path":"api/tags/JavaScript.json"},{"name":"Third-Party JavaScript","path":"api/tags/Third-Party JavaScript.json"},{"name":"Node.js","path":"api/tags/Node.js.json"}]}